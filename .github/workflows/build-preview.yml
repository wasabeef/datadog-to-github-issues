name: Build Preview

on:
  pull_request:
    branches: [main]

jobs:
  build-preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Import .tool-versions
        uses: wasabeef/import-asdf-tool-versions-action@v1.1.0
        id: asdf

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ steps.asdf.outputs.bun }}

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build

      - name: Copy dist files to action directories
        run: |
          mkdir -p rum/dist monitor/dist
          cp packages/rum-action/dist/* rum/dist/
          cp packages/monitor-action/dist/* monitor/dist/

      - name: Upload build artifacts for download
        uses: actions/upload-artifact@v4
        with:
          name: build-preview-${{ github.event.pull_request.number }}
          path: |
            rum/dist/
            monitor/dist/
          retention-days: 7

      - name: Comment PR with build info
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Get dist/ file info for both actions
            const actions = ['rum', 'monitor'];
            let fileInfo = '';
            
            actions.forEach(action => {
              const distPath = `${action}/dist/`;
              if (fs.existsSync(distPath)) {
                const files = fs.readdirSync(distPath);
                fileInfo += `\n#### ${action.toUpperCase()} Action:\n`;
                files.forEach(file => {
                  const fullPath = path.join(distPath, file);
                  const stats = fs.statSync(fullPath);
                  fileInfo += `- \`${file}\` (${(stats.size / 1024).toFixed(1)} KB)\n`;
                });
              }
            });

            const branchName = context.payload.pull_request.head.ref;
            const repoFullName = context.payload.repository.full_name;

            const body = `
            ## ðŸ“¦ Build Preview Ready

            âœ… Build completed successfully for commit \`${context.sha.substring(0, 7)}\`

            ### Generated Files:
            ${fileInfo}

            ### ðŸ§ª Testing This Branch

            **For RUM errors:**
            \`\`\`yaml
            - uses: ${repoFullName}/rum@${branchName}
              with:
                datadog-api-key: ${{ secrets.DATADOG_API_KEY }}
                datadog-app-key: ${{ secrets.DATADOG_APP_KEY }}
                github-token: ${{ secrets.GITHUB_TOKEN }}
                service: 'your-service-name'
            \`\`\`

            **For Monitor alerts (coming soon):**
            \`\`\`yaml
            - uses: ${repoFullName}/monitor@${branchName}
              with:
                datadog-api-key: ${{ secrets.DATADOG_API_KEY }}
                datadog-app-key: ${{ secrets.DATADOG_APP_KEY }}
                github-token: ${{ secrets.GITHUB_TOKEN }}
                monitor-tags: 'env:production'
            \`\`\`

            ### ðŸ“¥ Download Build Artifacts
            You can download the built files from the [Actions tab](${context.payload.repository.html_url}/actions/runs/${context.runId}) of this PR.

            ### ðŸ”„ Development Flow
            1. Test this branch in your target repository
            2. If working correctly, approve and merge this PR
            3. Create a release tag to publish stable version
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });