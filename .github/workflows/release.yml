name: Create Release

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on existing tags

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Import .tool-versions
        uses: wasabeef/import-asdf-tool-versions-action@v1.1.0
        id: asdf

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ steps.asdf.outputs.bun }}

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: bun run test

      - name: Run linter
        run: bun run lint

      - name: Build for release
        run: |
          bun run build
          # Copy built files to action directories
          mkdir -p rum/dist monitor/dist
          cp -r packages/rum-action/dist/* rum/dist/
          cp -r packages/monitor-action/dist/* monitor/dist/

      - name: Generate release notes
        id: release_notes
        uses: orhun/git-cliff-action@v3
        with:
          config: .github/cliff.toml
          args: --latest --strip header

      - name: Commit and push dist files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action [release]"
          git add -f rum/dist/ monitor/dist/

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes in dist/ files to commit"
          else
            git commit -m "build: add dist files for release ${{ github.ref_name }}"
          fi

          # Update the tag to include dist/ files
          git tag -d ${{ github.ref_name }} 2>/dev/null || true
          git tag ${{ github.ref_name }}
          git push --force origin ${{ github.ref_name }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: false
          body: ${{ steps.release_notes.outputs.content }}
